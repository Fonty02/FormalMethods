MODULE main
VAR
    floor : 0..4;
    direction : {up, down, idle};
    door : {open, closed};
    requested : 0..4;

ASSIGN
    init(floor) := 0;
    init(direction) := up;
    init(door) := closed;
    init(requested) := 3;

    next(floor) :=
        case
            direction = up & floor < 4 : floor + 1;
            direction = down & floor > 0 : floor - 1;
            TRUE : floor;
        esac;

    next(direction) :=
        case
            floor = requested : idle;
            requested > floor & floor < 4 : up;
            requested < floor & floor > 0 : down;
            TRUE : direction;
        esac;

    next(door) :=
        case
            floor = requested : open;
            TRUE : closed;
        esac;

    next(requested) :=
        case
            floor = 0 & requested = 1 : 1;
            floor = 0 & requested = 2 : 2;
            floor = 0 & requested = 3 : 3;
            floor = 0 & requested = 4 : 4;
            floor = 1 & requested = 0 : 0;
            floor = 1 & requested = 2 : 2;
            floor = 1 & requested = 3 : 3;
            floor = 1 & requested = 4 : 4;
            floor = 2 & requested = 0 : 0;
            floor = 2 & requested = 1 : 1;
            floor = 2 & requested = 3 : 3;
            floor = 2 & requested = 4 : 4;
            floor = 3 & requested = 0 : 0;
            floor = 3 & requested = 1 : 1;
            floor = 3 & requested = 2 : 2;
            floor = 3 & requested = 4 : 4;
            floor = 4 & requested = 0 : 0;
            floor = 4 & requested = 1 : 1;
            floor = 4 & requested = 2 : 2;
            floor = 4 & requested = 3 : 3;
            TRUE : requested;
        esac;


LTLSPEC    G(door = open -> direction = idle)
LTLSPEC    G(door = open -> F(door = closed))
LTLSPEC    G(door = closed -> F(door = open))
LTLSPEC    G(direction = up -> floor != 4)
LTLSPEC   G(direction = down -> floor != 0)
LTLSPEC    G(F(floor = 4))
LTLSPEC   G(requested = 3 -> F(floor = 3))
LTLSPEC G((floor = 0 | floor = 1 | floor = 2) & direction = up & requested = 3 -> direction = up U floor = 3)
LTLSPEC G((floor = 4| floor = 3 | floor = 2) & direction = down & requested = 1 -> direction = down U floor = 1)